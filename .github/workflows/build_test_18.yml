name: Ubuntu 18 + ROS Melodic
on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {name: 'Ubuntu 18 + ROS Melodic', rosdistro: 'melodic', container: 'ros:melodic-ros-base-bionic'}
    container: ${{ matrix.config.container }}
    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install System Deps on Melodic
      if: ${{ matrix.config.container == 'ros:melodic-ros-base-bionic' }}
      run: |
        apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        apt update && apt install -y python-wstool python-catkin-tools  autoconf libtool git  

    - name: Download ccache
      id: ccache
      shell: cmake -P {0}
      run: |
        set(ccache_url "https://github.com/cristianadam/ccache/releases/download/v3.7.7/ubuntu-latest.tar.xz")
        file(DOWNLOAD "${ccache_url}" ./ccache.tar.xz SHOW_PROGRESS)
        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./ccache.tar.xz)

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")

    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: ${{ matrix.config.name }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
          ${{ matrix.config.name }}-ccache-

    - name: Release Build Test
      working-directory: 
      env:
        DEBIAN_FRONTEND: noninteractiv
      shell: bash
      run: |
        apt update
        mkdir -p $HOME/catkin_ws/src;
        cd $HOME/catkin_ws
        catkin init
        catkin config --extend "/opt/ros/${{matrix.config.rosdistro}}"
        catkin config --merge-devel
        catkin config --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo 
        cd $HOME/catkin_ws/src
        ln -s $GITHUB_WORKSPACE
        wstool init . ./panoptic_mapping/panoptic_mapping_https.rosinstall
        wstool update
        rosdep update
        rosdep install --from-paths . --ignore-src -y --rosdistro ${{matrix.config.rosdistro}}
        catkin build -j$(nproc) -l$(nproc) panoptic_mapping_utils

    - name: Run Unit Tests
      working-directory:
      shell: bash
      run: |
        cd $HOME/catkin_ws/src
        catkin config --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCATKIN_ENABLE_TESTING=True
        catkin build panoptic_mapping --no-deps -i --catkin-make-args tests
        source $HOME/catkin_ws/devel/setup.bash
        status=0 && for f in $HOME/catkin_ws/devel/lib/panoptic_mapping/*-test; do $f || exit 1; done   
