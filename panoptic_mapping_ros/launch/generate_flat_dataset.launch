<launch>
  <!-- Arguments -->
  <arg name="waypoints" default="$(find panoptic_mapping_ros)/cfg/flat_dataset/waypoints.yaml"/>
  <arg name="airsim_cfg" default="$(find panoptic_mapping_ros)/cfg/flat_dataset/airsim.yaml"/>
  <arg name="data_dir" default="$(find panoptic_mapping_ros)/data"/>
  <arg name="use_sim_time" default="false"/>
  <arg name="record_data" default="true"/>

  <!-- to label the scene consistently, call 'flat_semantic_labelling.py'-->


  <!-- Execute -->
  <param name="use_sim_time" value="$(arg use_sim_time)" />
  
  <!-- World transform -->
  <node pkg="tf" type="static_transform_publisher" name="static_world_tf" args="0 0 0 0 0 0 1 /world /odom 100"/>

  <!-- airsim client -->
  <node name="airsim_simulator" pkg="unreal_airsim" type="airsim_simulator_node" required="true" output="screen" args="-alsologtostderr">
     <rosparam file="$(arg airsim_cfg)"/>
  </node>
  
  <!-- waypoints -->
  <node name="waypoint_publisher" pkg="panoptic_mapping" type="waypoint_dataset_generator.py" output="screen">
    <param name="waypoint_path" value="$(arg waypoints)" />
    <param name="replan_pos_threshold" value="0.2" />
    <param name="replan_yaw_threshold" value="10" />
    <remap from="~pose_in" to="/airsim_drone/ground_truth/pose" />
    <remap from="~simulation_ready" to="/simulation_is_ready" />
    <remap from="~waypoints_out" to="/airsim_drone/command/pose" />
  </node>
  
   <!-- Record a rosbag of the visualization-->
  <node pkg="rosbag" type="record" name="rosbag" if="$(arg record_data)"
       args="record -o $(arg data_dir)/ /rosout /clock /tf /tf_static /airsim_drone/ground_truth/pose /airsim_drone/Pointcloud"/>
<!--  /airsim_drone/Depth_cam /airsim_drone/RGB_pcl /airsim_drone/Scene_cam /airsim_drone/Seg_cam /airsim_drone/Seg_pcl     -->

  <!-- RVIZ Visualization -->
  <node type="rviz" name="rviz_voxblox" pkg="rviz" args="-d $(find panoptic_mapping)/cfg/flat_dataset/visualization.rviz"/>
  
</launch>
